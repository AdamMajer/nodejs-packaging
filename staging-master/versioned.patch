Author: Adam Majer <amajer@suse.de>
Date: Fri May 11 16:10:16 CEST 2018
Summary: Generate versioned binaries

Generate versioned binaries and install paths
so we can allow concurrent installations and
management via update_alternatives.

This is also important for generation of binary
modules for multiple versions of NodeJS
Index: node-git.29236b5c9d/Makefile
===================================================================
--- node-git.29236b5c9d.orig/Makefile
+++ node-git.29236b5c9d/Makefile
@@ -55,7 +55,7 @@ BUILDTYPE_LOWER := $(shell echo $(BUILDT
 EXEEXT := $(shell $(PYTHON) -c \
 		"import sys; print('.exe' if sys.platform == 'win32' else '')")
 
-NODE_EXE = node$(EXEEXT)
+NODE_EXE = node42$(EXEEXT)
 NODE ?= ./$(NODE_EXE)
 NODE_G_EXE = node_g$(EXEEXT)
 NPM ?= ./deps/npm/bin/npm-cli.js
Index: node-git.29236b5c9d/tools/install.py
===================================================================
--- node-git.29236b5c9d.orig/tools/install.py
+++ node-git.29236b5c9d/tools/install.py
@@ -87,7 +87,7 @@ def uninstall(paths, dst):
     try_remove(path, dst)
 
 def package_files(action, name, bins):
-  target_path = libdir() + '/node_modules/' + name + '/'
+  target_path = libdir() + '/node_modules/' + name + '42/'
 
   # don't install npm if the target path is a symlink, it probably means
   # that a dev version of npm is installed there
@@ -107,19 +107,19 @@ def package_files(action, name, bins):
     if action == uninstall:
       action([link_path], 'bin/' + bin_name)
     elif action == install:
-      try_symlink('../' + libdir() + '/node_modules/' + name + '/' + bin_target, link_path)
+      try_symlink('../' + libdir() + '/node_modules/' + name + '42/' + bin_target, link_path)
     else:
       assert 0  # unhandled action type
 
 def npm_files(action):
   package_files(action, 'npm', {
-    'npm': 'bin/npm-cli.js',
-    'npx': 'bin/npx-cli.js',
+    'npm42': 'bin/npm-cli.js',
+    'npx42': 'bin/npx-cli.js',
   })
 
 def corepack_files(action):
   package_files(action, 'corepack', {
-    'corepack': 'dist/corepack.js',
+    'corepack42': 'dist/corepack.js',
 #   Not the default just yet:
 #   'yarn': 'dist/yarn.js',
 #   'yarnpkg': 'dist/yarn.js',
@@ -137,7 +137,7 @@ def subdir_files(path, dest, action):
 
 def files(action):
   is_windows = sys.platform == 'win32'
-  output_file = 'node'
+  output_file = 'node42'
   output_prefix = 'out/Release/'
 
   if is_windows:
@@ -163,7 +163,7 @@ def files(action):
   if 'freebsd' in sys.platform or 'openbsd' in sys.platform:
     action(['doc/node.1'], 'man/man1/')
   else:
-    action(['doc/node.1'], 'share/man/man1/')
+    action(['doc/node.1'], 'share/man/man1/node42.1')
 
   if 'true' == variables.get('node_install_npm'):
     npm_files(action)
@@ -250,28 +250,28 @@ def headers(action):
     'src/node_buffer.h',
     'src/node_object_wrap.h',
     'src/node_version.h',
-  ], 'include/node/')
+  ], 'include/node42/')
 
   # Add the expfile that is created on AIX
   if sys.platform.startswith('aix'):
-    action(['out/Release/node.exp'], 'include/node/')
+    action(['out/Release/node.exp'], 'include/node42/')
 
-  subdir_files('deps/v8/include', 'include/node/', wanted_v8_headers)
+  subdir_files('deps/v8/include', 'include/node42/', wanted_v8_headers)
 
   if 'false' == variables.get('node_shared_libuv'):
-    subdir_files('deps/uv/include', 'include/node/', action)
+    subdir_files('deps/uv/include', 'include/node42/', action)
 
   if 'true' == variables.get('node_use_openssl') and \
      'false' == variables.get('node_shared_openssl'):
-    subdir_files('deps/openssl/openssl/include/openssl', 'include/node/openssl/', action)
-    subdir_files('deps/openssl/config/archs', 'include/node/openssl/archs', action)
-    subdir_files('deps/openssl/config', 'include/node/openssl', action)
+    subdir_files('deps/openssl/openssl/include/openssl', 'include/node42/openssl/', action)
+    subdir_files('deps/openssl/config/archs', 'include/node42/openssl/archs', action)
+    subdir_files('deps/openssl/config', 'include/node42/openssl', action)
 
   if 'false' == variables.get('node_shared_zlib'):
     action([
       'deps/zlib/zconf.h',
       'deps/zlib/zlib.h',
-    ], 'include/node/')
+    ], 'include/node42/')
 
   if sys.platform == 'zos':
     zoslibinc = os.environ.get('ZOSLIB_INCLUDES')
Index: node-git.29236b5c9d/doc/node.1
===================================================================
--- node-git.29236b5c9d.orig/doc/node.1
+++ node-git.29236b5c9d/doc/node.1
@@ -30,24 +30,24 @@
 .Dt NODE 1
 .
 .Sh NAME
-.Nm node
+.Nm node42
 .Nd server-side JavaScript runtime
 .
 .\"======================================================================
 .Sh SYNOPSIS
-.Nm node
+.Nm node42
 .Op Ar options
 .Op Ar v8-options
 .Op Fl e Ar string | Ar script.js | Fl
 .Op Fl -
 .Op Ar arguments ...
 .
-.Nm node
+.Nm node42
 .Cm inspect
 .Op Fl e Ar string | Ar script.js | Fl | Ar <host>:<port>
 .Ar ...
 .
-.Nm node
+.Nm node42
 .Op Fl -v8-options
 .
 .\"======================================================================
Index: node-git.29236b5c9d/deps/npm/man/man1/npm.1
===================================================================
--- node-git.29236b5c9d.orig/deps/npm/man/man1/npm.1
+++ node-git.29236b5c9d/deps/npm/man/man1/npm.1
@@ -1,6 +1,6 @@
 .TH "NPM" "1" "June 2022" "" ""
 .SH "NAME"
-\fBnpm\fR \- javascript package manager
+\fBnpm42\fR \- javascript package manager
 .SS Synopsis
 .SS Version
 .P
@@ -15,7 +15,7 @@ It is extremely configurable to support
 commonly, you use it to publish, discover, install, and develop node
 programs\.
 .P
-Run \fBnpm help\fP to get a list of available commands\.
+Run \fBnpm42 help\fP to get a list of available commands\.
 .SS Important
 .P
 npm comes preconfigured to use npm's public registry at
@@ -31,14 +31,14 @@ their terms of use\.
 You probably got npm because you want to install stuff\.
 .P
 The very first thing you will most likely want to run in any node
-program is \fBnpm install\fP to install its dependencies\.
+program is \fBnpm42 install\fP to install its dependencies\.
 .P
-You can also run \fBnpm install blerg\fP to install the latest version of
+You can also run \fBnpm42 install blerg\fP to install the latest version of
 "blerg"\.  Check out npm help \fBinstall\fP for more
 info\.  It can do a lot of stuff\.
 .P
-Use the \fBnpm search\fP command to show everything that's available in the
-public registry\.  Use \fBnpm ls\fP to show everything you've installed\.
+Use the \fBnpm42 search\fP command to show everything that's available in the
+public registry\.  Use \fBnpm42 ls\fP to show everything you've installed\.
 .SS Dependencies
 .P
 If a package lists a dependency using a git URL, npm will install that
@@ -87,7 +87,7 @@ npm help \fBpackage\.json\fP\|\.
 .IP \(bu 2
 link:
 Links your current working code into Node's path, so that you don't
-have to reinstall every time you make a change\.  Use npm help \fBnpm
+have to reinstall every time you make a change\.  Use npm help \fBnpm42
 link\fP to do this\.
 .IP \(bu 2
 install:
@@ -170,18 +170,18 @@ https://github\.com/npm/rfcs
 .SS See Also
 .RS 0
 .IP \(bu 2
-npm help help
+npm42 help help
 .IP \(bu 2
-npm help package\.json
+npm42 help package\.json
 .IP \(bu 2
-npm help npmrc
+npm42 help npmrc
 .IP \(bu 2
-npm help config
+npm42 help config
 .IP \(bu 2
-npm help install
+npm42 help install
 .IP \(bu 2
-npm help prefix
+npm42 help prefix
 .IP \(bu 2
-npm help publish
+npm42 help publish
 
 .RE
Index: node-git.29236b5c9d/src/node_main.cc
===================================================================
--- node-git.29236b5c9d.orig/src/node_main.cc
+++ node-git.29236b5c9d/src/node_main.cc
@@ -122,6 +122,7 @@ int main(int argc, char* argv[]) {
 #endif
   // Disable stdio buffering, it interacts poorly with printf()
   // calls elsewhere in the program (e.g., any logging from V8.)
+  setenv("NODE_VERSION", "42", 0);
   setvbuf(stdout, nullptr, _IONBF, 0);
   setvbuf(stderr, nullptr, _IONBF, 0);
   return node::Start(argc, argv);
Index: node-git.29236b5c9d/tools/test.py
===================================================================
--- node-git.29236b5c9d.orig/tools/test.py
+++ node-git.29236b5c9d/tools/test.py
@@ -935,7 +935,7 @@ class Context(object):
     if self.vm is not None:
       return self.vm
     if arch == 'none':
-      name = 'out/Debug/node' if mode == 'debug' else 'out/Release/node'
+      name = 'out/Debug/node' if mode == 'debug' else 'out/Release/node42'
     else:
       name = 'out/%s.%s/node' % (arch, mode)
 
Index: node-git.29236b5c9d/node.gyp
===================================================================
--- node-git.29236b5c9d.orig/node.gyp
+++ node-git.29236b5c9d/node.gyp
@@ -24,8 +24,8 @@
     'node_use_openssl%': 'true',
     'node_shared_openssl%': 'false',
     'node_v8_options%': '',
-    'node_core_target_name%': 'node',
-    'node_lib_target_name%': 'libnode',
+    'node_core_target_name%': 'node42',
+    'node_lib_target_name%': 'libnode42',
     'node_intermediate_lib_type%': 'static_library',
     'node_builtin_modules_path%': '',
     # We list the deps/ files out instead of globbing them in js2c.py since we
Index: node-git.29236b5c9d/deps/npm/man/man1/npx.1
===================================================================
--- node-git.29236b5c9d.orig/deps/npm/man/man1/npx.1
+++ node-git.29236b5c9d/deps/npm/man/man1/npx.1
@@ -57,9 +57,9 @@ no bin entries, or none of them match th
 To run a binary \fIother than\fR the named binary, specify one or more
 \fB\-\-package\fP options, which will prevent npm from inferring the package from
 the first command argument\.
-.SS \fBnpx\fP vs \fBnpm exec\fP
+.SS \fBnpx42\fP vs \fBnpm exec\fP
 .P
-When run via the \fBnpx\fP binary, all flags and options \fImust\fR be set prior to
+When run via the \fBnpx42\fP binary, all flags and options \fImust\fR be set prior to
 any positional arguments\.  When run via \fBnpm exec\fP, a double\-hyphen \fB\-\-\fP
 flag can be used to suppress npm's parsing of switches and options that
 should be sent to the executed command\.
@@ -68,7 +68,7 @@ For example:
 .P
 .RS 2
 .nf
-$ npx foo@latest bar \-\-package=@npmcli/foo
+$ npx42 foo@latest bar \-\-package=@npmcli/foo
 .fi
 .RE
 .P
@@ -89,7 +89,7 @@ different:
 .P
 .RS 2
 .nf
-$ npm exec foo@latest bar \-\-package=@npmcli/foo
+$ npm42 exec foo@latest bar \-\-package=@npmcli/foo
 .fi
 .RE
 .P
@@ -105,11 +105,11 @@ $ foo@latest bar
 .P
 The double\-hyphen character is recommended to explicitly tell npm to stop
 parsing command line options and switches\.  The following command would
-thus be equivalent to the \fBnpx\fP command above:
+thus be equivalent to the \fBnpx42\fP command above:
 .P
 .RS 2
 .nf
-$ npm exec \-\- foo@latest bar \-\-package=@npmcli/foo
+$ npm42 exec \-\- foo@latest bar \-\-package=@npmcli/foo
 .fi
 .RE
 .SS Examples
@@ -119,8 +119,8 @@ arguments:
 .P
 .RS 2
 .nf
-$ npm exec \-\- tap \-\-bail test/foo\.js
-$ npx tap \-\-bail test/foo\.js
+$ npm42 exec \-\- tap \-\-bail test/foo\.js
+$ npx42 tap \-\-bail test/foo\.js
 .fi
 .RE
 .P
@@ -129,9 +129,9 @@ by specifying a \fB\-\-package\fP option
 .P
 .RS 2
 .nf
-$ npm exec \-\-package=foo \-\- bar \-\-bar\-argument
+$ npm42 exec \-\-package=foo \-\- bar \-\-bar\-argument
 # ~ or ~
-$ npx \-\-package=foo bar \-\-bar\-argument
+$ npx42 \-\-package=foo bar \-\-bar\-argument
 .fi
 .RE
 .P
@@ -139,14 +139,14 @@ Run an arbitrary shell script, in the co
 .P
 .RS 2
 .nf
-$ npm x \-c 'eslint && say "hooray, lint passed"'
-$ npx \-c 'eslint && say "hooray, lint passed"'
+$ npm42 x \-c 'eslint && say "hooray, lint passed"'
+$ npx42 \-c 'eslint && say "hooray, lint passed"'
 .fi
 .RE
 .SS Compatibility with Older npx Versions
 .P
-The \fBnpx\fP binary was rewritten in npm v7\.0\.0, and the standalone \fBnpx\fP
-package deprecated at that time\.  \fBnpx\fP uses the \fBnpm exec\fP
+The \fBnpx42\fP binary was rewritten in npm v7\.0\.0, and the standalone \fBnpx42\fP
+package deprecated at that time\.  \fBnpx42\fP uses the \fBnpm42 exec\fP
 command instead of a separate argument parser and install process, with
 some affordances to maintain backwards compatibility with the arguments it
 accepted in previous versions\.
@@ -154,10 +154,10 @@ accepted in previous versions\.
 This resulted in some shifts in its functionality:
 .RS 0
 .IP \(bu 2
-Any \fBnpm\fP config value may be provided\.
+Any \fBnpm42\fP config value may be provided\.
 .IP \(bu 2
 To prevent security and user\-experience problems from mistyping package
-names, \fBnpx\fP prompts before installing anything\.  Suppress this
+names, \fBnpx42\fP prompts before installing anything\.  Suppress this
 prompt with the \fB\-y\fP or \fB\-\-yes\fP option\.
 .IP \(bu 2
 The \fB\-\-no\-install\fP option is deprecated, and will be converted to \fB\-\-no\fP\|\.
@@ -165,13 +165,13 @@ The \fB\-\-no\-install\fP option is depr
 Shell fallback functionality is removed, as it is not advisable\.
 .IP \(bu 2
 The \fB\-p\fP argument is a shorthand for \fB\-\-parseable\fP in npm, but shorthand
-for \fB\-\-package\fP in npx\.  This is maintained, but only for the \fBnpx\fP
+for \fB\-\-package\fP in npx\.  This is maintained, but only for the \fBnpx42\fP
 executable\.
 .IP \(bu 2
 The \fB\-\-ignore\-existing\fP option is removed\.  Locally installed bins are
 always present in the executed process \fBPATH\fP\|\.
 .IP \(bu 2
-The \fB\-\-npm\fP option is removed\.  \fBnpx\fP will always use the \fBnpm\fP it ships
+The \fB\-\-npm42\fP option is removed\.  \fBnpx42\fP will always use the \fBnpm42\fP it ships
 with\.
 .IP \(bu 2
 The \fB\-\-node\-arg\fP and \fB\-n\fP options are removed\.

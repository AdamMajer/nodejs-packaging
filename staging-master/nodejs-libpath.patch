--- a/tools/install.py
+++ b/tools/install.py
@@ -7,6 +7,7 @@ import re
 import shutil
 import sys
 from getmoduleversion import get_version
+from distutils import sysconfig
 
 # set at init time
 node_prefix = '/usr/local' # PREFIX variable from Makefile
@@ -75,7 +76,7 @@ def install(paths, dst): map(lambda path
 def uninstall(paths, dst): map(lambda path: try_remove(path, dst), paths)
 
 def npm_files(action):
-  target_path = 'lib/node_modules/npm/'
+  target_path = sysconfig.get_config_var("LIB") + '/node_modules/npm/'
 
   # don't install npm if the target path is a symlink, it probably means
   # that a dev version of npm is installed there
@@ -93,7 +94,7 @@ def npm_files(action):
   if action == uninstall:
     action([link_path], 'bin/npm')
   elif action == install:
-    try_symlink('../lib/node_modules/npm/bin/npm-cli.js', link_path)
+    try_symlink("../" + sysconfig.get_config_var("LIB") + '/node_modules/npm/bin/npm-cli.js',link_path)
   else:
     assert(0) # unhandled action type
 
@@ -102,7 +103,7 @@ def npm_files(action):
   if action == uninstall:
     action([link_path], 'bin/npx')
   elif action == install:
-    try_symlink('../lib/node_modules/npm/bin/npx-cli.js', link_path)
+    try_symlink('../' + sysconfig.get_config_var("LIB") + '/node_modules/npm/bin/npx-cli.js', link_path)
   else:
     assert(0) # unhandled action type
 
@@ -138,7 +139,7 @@ def files(action):
     action([output_prefix + output_file], 'lib/' + output_file)
 
   if 'true' == variables.get('node_use_dtrace'):
-    action(['out/Release/node.d'], 'lib/dtrace/node.d')
+    action(['out/Release/node.d'], sysconfig.get_config_var("LIB") + '/dtrace/node.d')
 
   # behave similarly for systemtap
   action(['src/node.stp'], 'share/systemtap/tapset/')
--- a/lib/internal/modules/cjs/loader.js
+++ b/lib/internal/modules/cjs/loader.js
@@ -790,7 +790,7 @@ Module._initPaths = function() {
   } else {
     prefixDir = path.resolve(process.execPath, '..', '..');
   }
-  var paths = [path.resolve(prefixDir, 'lib', 'node')];
+  var paths = ['/usr/lib/node'];
 
   if (homeDir) {
     paths.unshift(path.resolve(homeDir, '.node_libraries'));

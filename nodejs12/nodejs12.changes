-------------------------------------------------------------------
Fri May  3 11:35:05 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to 12.1.0:
  * intl: Update ICU to 64.2.
  * c++ API: Added an overload EmitAsyncDestroy that can be used
    during garbage collection

- Notable changes in 12.0.0:
  * assert:
    + validate required arguments
    + adjust loose assertions
  * async_hooks:
    + remove deprecated emitBefore and emitAfter
    + remove promise object from resource
  * bootstrap: make Buffer and process non-enumerable
  * buffer:
    + use stricter range checks
    + harden SlowBuffer creation
    + harden validation of buffer allocation size
    + do proper error propagation in addon methods
  * child_process:
    + remove options.customFds
    + harden fork arguments validation
    + use non-infinite maxBuffer defaults
  * console: don't use ANSI escape codes when TERM=dumb
  * crypto:
    + remove legacy native handles
    + decode missing passphrase errors
    + remove Cipher.setAuthTag() and Decipher.getAuthTag()
    + remove deprecated crypto._toBuf()
    + set DEFAULT_ENCODING property to non-enumerable
  * deps:
    + update V8 to 7.4.288.13
    + bump minimum icu version to 63
    + update bundled OpenSSL to 1.1.1b and bump minimum OpenSSL
      requirements to 1.1.1
  * errors: update error name
  * fs:
    + use proper .destroy() implementation for SyncWriteStream
    + improve mode validation
    + harden validation of start option in createWriteStream()
    + make writeFile consistent with readFile wrt fd
  * http:
    + validate timeout in ClientRequest()
    + return HTTP 431 on HPE_HEADER_OVERFLOW error
    + switch default parser to llhttp
    + Runtime-deprecate outgoingMessage._headers and
      outgoingMessage._headerNames
  * lib:
    + remove Atomics.wake()
    + move DTRACE_* probes out of global scope
    + deprecate _stream_wrap
    + use ES6 class inheritance style
  * module:
    + remove unintended access to deps
    + improve error message for MODULE_NOT_FOUND
    + requireStack property for MODULE_NOT_FOUND
    + make require('.') never resolve outside the current directory
    + throw an error for invalid package.json main entries
    + don't search in require.resolve.paths
  * net:
    + remove Server.listenFD()
    + do not add .host and .port properties to DNS error
    + emit "write after end" errors in the next tick
    + deprecate _setSimultaneousAccepts() undocumented function
  * os:
    + implement os.type() using uv_os_uname()
    + remove os.getNetworkInterfaces()
  * process:
    + make global.process, global.Buffer getters
    + DEP0062 (node --debug) to end-of-life
    + exit on --debug and --debug-brk after option parsing
    + improve --redirect-warnings handling
  * readline: support TERM=dumb
  * repl:
    + add welcome message
    + fix terminal default setting
    + check colors with .getColorDepth()
    + deprecate REPLServer.rli
  * src:
    + update NODE_MODULE_VERSION to 72
    + remove AddPromiseHook()
    + remove icuDataDir from node config
    + clean up MultiIsolatePlatform interface
  * tls:
    + support TLSv1.3
    + return correct version from getCipher()
    + check arg types of renegotiate()
    + add code for ERR_TLS_INVALID_PROTOCOL_METHOD
    + emit a warning when servername is an IP address
    + disable TLS v1.0 and v1.1 by default
    + remove unused arg to createSecureContext()
    + deprecate Server.prototype.setOptions()
    + load NODE_EXTRA_CA_CERTS at startup
  * util:
    + remove util.print(), util.puts(), util.debug() and util.error()
    + change inspect compact and breakLength default
    + improve inspect edge cases
    + only the first line of the error message
    + don't set the prototype of callbackified functions
    + rename callbackified function
    + increase function length when using callbackify()
    + prevent tampering with internals in inspect()
    + prevent Proxy traps being triggered by .inspect()
    + prevent leaking internal properties
    + protect against monkeypatched Object prototype for inspect()
    + treat format arguments equally
  * zlib:
    + throw TypeError if callback is missing
    + make “bare” constants un-enumerable

For detailed changelog, see
https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V12.md

-------------------------------------------------------------------
Wed Feb 13 11:34:12 UTC 2019 - adam.majer@suse.de

- NodeJS 12.x branch created


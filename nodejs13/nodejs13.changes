-------------------------------------------------------------------
Fri Jan  3 15:03:17 UTC 2020 - Adam Majer <adam.majer@suse.de>

- sle12_python3_compat.patch: Adds Python 3.4 to compatible
  python versions allowing us to build with python3 on SLE-12

-------------------------------------------------------------------
Thu Dec 19 14:05:11 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to 13.5.0:
  * cli: add --trace-exit cli option
  * http, https: increase server headers timeout
  * readline:
    + update ansi-regex
    + promote _getCursorPos to public api
  * repl: add completion preview
  * util: add Set and map size to inspect output
  * wasi: require CLI flag to require() wasi module

- Changes in 13.4.0:
  * deps:
    + update npm to 6.13.4 fixing an arbitrary path overwrite
    and access via "bin" field (bsc#1159352, CVE-2019-16777,
    CVE-2019-16776, CVE-2019-16775)
    + update uvwasi
    + upgrade to libuv 1.34.0
  * doc: docs deprecate http finished
  * events: add captureRejection option
  * http:
    + add captureRejection support
    + llhttp opt-in insecure HTTP header parsing
  * http2: implement capture rection for 'request' and 'stream' events
  * net: implement capture rejections for 'connection' event
  * repl: support previews by eager evaluating input
  * stream: add support for captureRejection option
  * tls:
    + implement capture rejections for 'secureConnection' event
    + expose IETF name for current cipher suite
  * worker: add argv constructor option

- skip_no_console.patch, versioned.patch: refreshed
- python3.patch: Fix building with Python3

-------------------------------------------------------------------
Thu Dec  5 15:10:32 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to 13.3.0:
  * fs: Reworked experimental recursive rmdir()
  * http: Make maximum header size configurable per-stream or per-server
  * http2:
    + Make maximum tolerated rejected streams configurable
    + Allow to configure maximum tolerated invalid frames
  * wasi: Introduce initial WASI support

-------------------------------------------------------------------
Fri Nov 22 15:11:15 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to 13.2.0:
  * addons: Deprecate one- and two-argument AtExit().
    Use the three-argument variant of AtExit() or
    AddEnvironmentCleanupHook() instead
  * child_process,cluster: The serialization option is added that
    allows child process IPC to use the V8 serialization API
  * deps:
    + Update V8 to 7.9
    + Update npm to 6.13.1
  * embedder:
    + Exposes the ability to pass cli flags / options through an
      API as embedder
    + Allow adding linked bindings to Environment
  * esm: Unflag --experimental-modules
  * stream: Add writable.writableCorked property
  * worker: Allow specifying resource limits
  * v8: The Serialization API is now stable

- versioned.patch, nodejs-libpath.patch: refreshed

-------------------------------------------------------------------
Mon Nov 11 12:13:47 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to 13.1.0:
  * cli: Added a new flag (--trace-uncaught) that makes Node.js print
    the stack trace at the time of throwing uncaught exceptions,
    rather than at the creation of the Error object, if there is any.
    This is disabled by default because it affects GC behavior
  * crypto: Added Hash.prototype.copy()
  * dgram: Added source-specific multicast support as per RFC 4607
  * fs: Added a bufferSize option to fs.opendir()

-------------------------------------------------------------------
Tue Nov  5 08:28:35 UTC 2019 - Adam Majer <adam.majer@suse.de>

- skip_no_console.patch: skip tests with dumb console

-------------------------------------------------------------------
Wed Oct 23 13:18:43 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Update to upstream 13.0.1:
  * deps: Fixed a bug in npm 6.12.0 where warnings are emitted on
    Node.js 13.x
  * esm: Changed file extension resolution order of
    --es-module-specifier-resolution=node to match that
    of the CommonJS loader

- Changes in version 13.0.0:
  * assert:
    + If the validation function passed to assert.throws() or
      assert.rejects() returns a value other than true,
      an assertion error will be thrown instead of the original
      error to highlight the programming mistake
    + If a constructor function is passed to validate the instance
      of errors thrown in assert.throws() or assert.reject(),
      an assertion error will be thrown instead of the original error
  * child_process: ChildProcess._channel (DEP0129) is now
    a Runtime deprecation
  * console: The output console.timeEnd() and console.timeLog()
    will now automatically select a suitable time unit instead
    of always using milliseconds
  * deps: The V8 engine was updated to version 7.8.
  * domain: The domain's error handler is now executed with
    the active domain set to the domain's parent to prevent
    inner recursion
  * fs:
    + The undocumented method FSWatcher.prototype.start() was removed
    + Calling the open() method on a ReadStream or WriteStream
      now emits a runtime deprecation warning. This is an internal
      method that should not be used by user code.
    + fs.read/write, fs.readSync/writeSync and fd.read/write now
      accept any safe integer as their offset parameter. This value
      is no longer coerced.
  * http:
    + Aborted requests no longer emit the end or error events after aborted
    + Data will no longer be emitted after a socket error
    + The legacy HTTP parser (previously available under
      the --http-parser=legacy flag) was removed
    + host option for HTTP requests is now validated to be a string value
    + The request.connection and response.connection properties
      are now runtime deprecated. The equivalent request.socket
      and response.socket should be used instead
  * http, http2:
    + The default server timeout was removed
    + Brought 425 status code name into accordance with RFC 8470.
      The name changed from "Unordered Collection" to "Too Early"
  * lib: The error.errno property will now always be a number. To
    get the string value, use error.code instead.
  * module: module.createRequireFromPath() is deprecated. Use
    module.createRequire() instead
  * src: Changing the value of process.env.TZ will now clear
    the tz cache. This affects the default time zone used by methods
    such as Date.prototype.toString
  * stream: The timing and behavior of streams was consolidated
    for a number of edge cases. Please look at the individual commits
    for more information.

Complete changelogs are available at,
https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V13.md

-------------------------------------------------------------------
Mon Oct 14 14:42:24 UTC 2019 - Adam Majer <adam.majer@suse.de>

- Create package

